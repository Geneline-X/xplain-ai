generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("SUPABASE_DATABASE_URL")
  directUrl    = env("SUPABASE_DIRECT_URL")
  relationMode = "prisma"
}

model User {
  id                      String    @id(map: "idx_28874_PRIMARY") @unique(map: "idx_28874_User_id_key") @db.VarChar(191)
  email                   String    @unique(map: "idx_28874_User_email_key") @db.VarChar(191)
  monimeCustomerId        String?   @unique(map: "idx_28874_User_monime_customer_id_key") @map("monime_customer_id") @db.VarChar(191)
  monimeSubscriptionId    String?   @unique(map: "idx_28874_User_monime_subscription_id_key") @map("monime_subscription_id") @db.VarChar(191)
  monimeSessionId         String?   @map("monime_session_id") @db.VarChar(191)
  monimeUrl               String?   @map("monime_url") @db.VarChar(191)
  monimeCurrentPeriodsEnd DateTime? @map("monime_current_period_end") @db.Timestamptz(6)
  File                    File[]
  currentPrice            String?    @map("current_price") @db.VarChar(191)
  Message                 Message[]
}

model File {
  id           String            @id(map: "idx_28861_PRIMARY") @default(cuid()) @db.VarChar(191)
  name         String            @db.VarChar(191)
  uploadStatus File_uploadStatus @default(PENDING)
  url          String            @db.VarChar(191)
  key          String            @db.VarChar(191)
  createAt     DateTime          @default(now()) @db.Timestamptz(6)
  updatedAt    DateTime          @updatedAt @db.Timestamptz(6)
  userId       String?           @db.VarChar(191)
  message      Message[]
  User         User?             @relation(fields: [userId], references: [id])
}

model Favorites {
  id        String  @id(map: "idx_28870_PRIMARY") @default(cuid()) @db.VarChar(191)
  userId    String  @db.VarChar(191)
  messageId String  @db.VarChar(191)
  title     String?  @optional
  description String?  @optional
  createdAt  DateTime @default(now()) @db.Timestamptz(6)
  updatedAt  DateTime @updatedAt @db.Timestamptz(6)

  # Optional document association (for document-specific favorites)
  file       File?    @relation(fields: [fileId], references: [id])

  @@unique([userId, messageId])
}

model Message {
  id            String   @id(map: "idx_28868_PRIMARY") @default(cuid()) @db.VarChar(191)
  text          String
  isUserMessage Boolean
  createAt      DateTime @default(now()) @db.Timestamptz(6)
  updatedAt     DateTime @updatedAt @db.Timestamptz(6)
  userId        String?  @db.VarChar(191)
  fileId        String?  @db.VarChar(191)
  User          User?    @relation(fields: [userId], references: [id])
  File          File?    @relation(fields: [fileId], references: [id])
}

enum File_uploadStatus {
  PENDING
  PROCESSING
  FAILED
  SUCCESS
}
